#include <iostream>
#include "spectrum.h"

void normalizeSpectrum(spec::Spectrum& spec, double brightness) {
    for (size_t i = 0; i < spec.size; ++i) {
        spec.spec[i] /= brightness;
    }
}

//const double kodak_red[] = {0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.003470, 0.010170, 0.016151, 0.024095, 0.033512, 0.044926, 0.057448, 0.068771, 0.082239, 0.094167, 0.103504, 0.110467, 0.116539, 0.124118, 0.132451, 0.141970, 0.152186, 0.161682, 0.169307, 0.174775, 0.184111, 0.197934, 0.211448, 0.221813, 0.228958, 0.231994, 0.231503, 0.229540, 0.223331, 0.216334, 0.213754, 0.219404, 0.235704, 0.275425, 0.328946, 0.396907, 0.473679, 0.547369, 0.611700, 0.663497, 0.718582, 0.763760, 0.756820, 0.683358, 0.630544, 0.580390, 0.523251, 0.457824, 0.388335, 0.319598, 0.256820, 0.201655, 0.152209, 0.120705, 0.093380, 0.073679, 0.061785, 0.054617, 0.049640, 0.044664, 0.038203, 0.028524, 0.013640};
//const double kodak_green[] = {0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.004452, 0.016345, 0.033957, 0.050850, 0.061032, 0.073679, 0.091827, 0.117121, 0.149812, 0.188711, 0.240178, 0.294304, 0.346901, 0.399498, 0.457071, 0.511563, 0.565780, 0.622577, 0.684853, 0.743979, 0.803002, 0.864753, 0.924552, 0.970209, 0.994042, 0.994042, 0.974866, 0.940715, 0.895332, 0.838124, 0.776224, 0.713697, 0.652186, 0.590914, 0.531149, 0.475768, 0.427006, 0.385744, 0.351501, 0.326390, 0.305216, 0.286360, 0.267755, 0.246890, 0.225796, 0.201826, 0.177834, 0.155302, 0.134345, 0.114028, 0.094943, 0.078347, 0.064388, 0.052106, 0.035213, 0.024312, 0.016391, 0.010193, 0.006221, 0.001244, 0.000000, 0.000000, 0.000000, 0.000000};
//const double kodak_blue[] = { 0.006221, 0.019096, 0.034231, 0.051238, 0.071327, 0.097306, 0.118400, 0.137233, 0.156249, 0.176144, 0.195868, 0.210387, 0.222577, 0.232257, 0.239699, 0.245634, 0.248647, 0.249401, 0.248396, 0.246148, 0.243180, 0.236240, 0.229232, 0.221036, 0.211426, 0.201062, 0.190652, 0.181851, 0.175117, 0.169307, 0.161682, 0.159811, 0.158623, 0.157665, 0.156946, 0.156946, 0.155028, 0.153864, 0.152448, 0.151010, 0.151010, 0.152928, 0.156249, 0.161477, 0.168463, 0.176407, 0.186771, 0.199498, 0.211962, 0.222326, 0.229540, 0.235475, 0.236959, 0.234973, 0.229951, 0.221778, 0.207259, 0.188837, 0.171601, 0.155302, 0.134345, 0.114028, 0.094943, 0.078347, 0.064388, 0.052106, 0.043157, 0.037222, 0.029780, 0.019587, 0.008675, 0.001735, 0.000000, 0.000000, 0.000000, 0.000000};

int main(int argc, char** argv) {
    std::cout << "Hello World!" << std::endl;

//    const size_t lambda_min = 400;
//    const size_t lambda_max = 700;
//    const size_t lambda_step = 4;

    spec::Spectrum red(0, 0, { 0. });
    spec::Spectrum green(0, 0, { 0. });
    spec::Spectrum blue(0, 0, { 0. });
    spec::parseFromFile(&red, &green, &blue, argv[1]);

    const double r_brightness = red.getBrightness();
    const double g_brightness = green.getBrightness();
    const double b_brightness = blue.getBrightness();

    const double max_brightness = std::max(std::max(r_brightness, g_brightness), b_brightness);

    if (max_brightness > 1.) {
        normalizeSpectrum(red, max_brightness);
        normalizeSpectrum(green, max_brightness);
        normalizeSpectrum(blue, max_brightness);
    }

    red.store("../measured_red.bin");
    green.store("../measured_green.bin");
    blue.store("../measured_blue.bin");

    red.print(3);
    green.print(3);
    blue.print(3);
}